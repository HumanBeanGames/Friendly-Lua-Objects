NDSummary.OnToolTipsLoaded("CSharpClass:MoonSharp.Interpreter.CallbackArguments",{1510:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1510\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">MoonSharp.&#8203;Interpreter.</span>&#8203;CallbackArguments</div></div></div><div class=\"TTSummary\">This class is a container for arguments received by a CallbackFunction</div></div>",1512:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1512\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">IList&lt;DynValue&gt; m_Args</div></div></div>",1513:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1513\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">int</span> m_Count</div></div></div>",1514:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1514\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">bool</span> m_LastIsTuple</div></div></div>",1516:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1516\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> CallbackArguments(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">IList&lt;DynValue&gt;&nbsp;</td><td class=\"PName last\">args,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">isMethodCall</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Initializes a new instance of the CallbackArguments class.</div></div>",1518:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1518\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public int</span> Count { <span class=\"SHKeyword\">get</span> }</div></div><div class=\"TTSummary\">Gets the count of arguments</div></div>",1519:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1519\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public bool</span> IsMethodCall { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">private set</span> }</div></div><div class=\"TTSummary\">Gets or sets a value indicating whether this is a method call.</div></div>",1521:"<div class=\"NDToolTip TOperator LCSharp\"><div id=\"NDPrototype1521\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> DynValue <span class=\"SHKeyword\">this</span>[</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">index</td></tr></table></td><td class=\"PAfterParameters\">] { <span class=\"SHKeyword\">get</span> }</td></tr></table></div></div><div class=\"TTSummary\">Gets the DynValue at the specified index, or Void if not found</div></div>",1523:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1523\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> DynValue RawGet(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">index,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">translateVoids</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Gets the DynValue at the specified index, or null.</div></div>",1524:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1524\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> DynValue[] GetArray(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName\">skip</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> <span class=\"SHNumber\">0</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Converts the arguments to an array</div></div>",1525:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1525\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> DynValue AsType(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName\">argNum,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">funcName,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">DataType&nbsp;</td><td class=\"PName\">type,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">allowNil</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> <span class=\"SHKeyword\">false</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Gets the specified argument as as an argument of the specified type. If not possible, an exception is raised.</div></div>",1526:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1526\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> T AsUserData&lt;T&gt;(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName\">argNum,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">funcName,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">allowNil</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> <span class=\"SHKeyword\">false</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Gets the specified argument as as an argument of the specified user data type. If not possible, an exception is raised.</div></div>",1527:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1527\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public int</span> AsInt(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">argNum,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">funcName</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Gets the specified argument as an integer</div></div>",1528:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1528\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public long</span> AsLong(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">argNum,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">funcName</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Gets the specified argument as a long integer</div></div>",1529:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1529\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public string</span> AsStringUsingMeta(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">ScriptExecutionContext&nbsp;</td><td class=\"PName last\">executionContext,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">argNum,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">funcName</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Gets the specified argument as a string, calling the __tostring metamethod if needed, in a NON yield-compatible way.</div></div>",1530:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1530\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> CallbackArguments SkipMethodCall()</div></div><div class=\"TTSummary\">Returns a copy of CallbackArguments where the first (&quot;self&quot;) argument is skipped if this was a method call, otherwise returns itself.</div></div>"});