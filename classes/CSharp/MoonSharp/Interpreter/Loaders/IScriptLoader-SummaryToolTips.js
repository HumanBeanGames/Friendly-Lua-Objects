NDSummary.OnToolTipsLoaded("CSharpClass:MoonSharp.Interpreter.Loaders.IScriptLoader",{3192:"<div class=\"NDToolTip TInterface LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3192\"><div class=\"CPEntry TInterface Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">interface</span></div><div class=\"CPName\"><span class=\"Qualifier\">MoonSharp.&#8203;Interpreter.&#8203;Loaders.</span>&#8203;IScriptLoader</div></div></div><div class=\"TTSummary\">Class dictating how requests to read scripts from files are handled.&nbsp; It\'s recommended that no class implement IScriptLoader directly, and rather extend ScriptLoaderBase.</div></div>",3194:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3194\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">object</span> LoadFile(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">file,</td></tr><tr><td class=\"PType first\">Table&nbsp;</td><td class=\"PName last\">globalContext</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Opens a file for reading the script code.&nbsp; It can return either a string, a byte[] or a Stream.&nbsp; If a byte[] is returned, the content is assumed to be a serialized (dumped) bytecode. If it\'s a string, it\'s assumed to be either a script or the output of a string.dump call. If a Stream, autodetection takes place.</div></div>",3195:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3195\" class=\"NDPrototype WideForm\"><div class=\"PSection PPlainSection\"><span class=\"SHMetadata\">[Obsolete(&quot;This serves almost no purpose. Kept here just to preserve backward compatibility.&quot;)]</span></div><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">string</span> ResolveFileName(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">filename,</td></tr><tr><td class=\"PType first\">Table&nbsp;</td><td class=\"PName last\">globalContext</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Resolves a filename [applying paths, etc.]</div></div>",3196:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3196\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">string</span> ResolveModuleName(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">modname,</td></tr><tr><td class=\"PType first\">Table&nbsp;</td><td class=\"PName last\">globalContext</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Resolves the name of a module to a filename (which will later be passed to OpenScriptFile)</div></div>"});