NDSummary.OnToolTipsLoaded("File:Plugins/MoonSharp/Interpreter/Execution/ScriptExecutionContext.cs",{2119:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2119\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">MoonSharp.&#8203;Interpreter.</span>&#8203;ScriptExecutionContext</div></div></div><div class=\"TTSummary\">Class giving access to details of the environment where the script is executing</div></div>",2121:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2121\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">Processor m_Processor</div></div></div>",2122:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2122\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">CallbackFunction m_Callback</div></div></div>",2124:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2124\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">internal</span> ScriptExecutionContext(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Processor&nbsp;</td><td class=\"PName\">p,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">CallbackFunction&nbsp;</td><td class=\"PName\">callBackFunction,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">SourceRef&nbsp;</td><td class=\"PName\">sourceRef,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">isDynamic</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> <span class=\"SHKeyword\">false</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div></div>",2126:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype2126\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public bool</span> IsDynamicExecution { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">private set</span> }</div></div><div class=\"TTSummary\">Gets a value indicating whether this instance is running a dynamic execution.&nbsp; Under a dynamic execution, most methods of ScriptExecutionContext are not reliable as the processing engine of the script is not &quot;really&quot; running or is not available.</div></div>",2127:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype2127\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> SourceRef CallingLocation { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">private set</span> }</div></div><div class=\"TTSummary\">Gets the location of the code calling back</div></div>",2128:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype2128\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public object</span> AdditionalData { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div></div><div class=\"TTSummary\">Gets or sets the additional data associated to this CLR function call.</div></div>",2130:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2130\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> Table GetMetatable(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">DynValue&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Gets the metatable associated with the given value.</div></div>",2131:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2131\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> DynValue GetMetamethod(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">DynValue&nbsp;</td><td class=\"PName last\">value,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">metamethod</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Gets the specified metamethod associated with the given value.</div></div>",2132:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2132\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> DynValue GetMetamethodTailCall(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\">DynValue&nbsp;</td><td class=\"PName last\">value,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">metamethod,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">params</span>&nbsp;</td><td class=\"PType\">DynValue[]&nbsp;</td><td class=\"PName last\">args</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">prepares a tail call request for the specified metamethod, or null if no metamethod is found.</div></div>",2133:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2133\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> DynValue GetBinaryMetamethod(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">DynValue&nbsp;</td><td class=\"PName last\">op1,</td></tr><tr><td class=\"PType first\">DynValue&nbsp;</td><td class=\"PName last\">op2,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">eventName</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Gets the metamethod to be used for a binary operation using op1 and op2.</div></div>",2134:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2134\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> Script GetScript()</div></div><div class=\"TTSummary\">Gets the script object associated with this request</div></div>",2135:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2135\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> Coroutine GetCallingCoroutine()</div></div><div class=\"TTSummary\">Gets the coroutine which is performing the call</div></div>",2136:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2136\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> DynValue EmulateClassicCall(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">CallbackArguments&nbsp;</td><td class=\"PName last\">args,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">functionName,</td></tr><tr><td class=\"PType first\">Func&lt;LuaState, <span class=\"SHKeyword\">int</span>&gt;&nbsp;</td><td class=\"PName last\">callback</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Calls a callback function implemented in &quot;classic way&quot;.&nbsp; Useful to port C code from Lua, or C# code from UniLua and KopiLua.&nbsp; Lua : http://&#8203;www&#8203;.lua&#8203;.org&#8203;/ UniLua : http://&#8203;github&#8203;.com&#8203;/xebecnan&#8203;/UniLua KopiLua : http://&#8203;github&#8203;.com&#8203;/NLua&#8203;/KopiLua</div></div>",2137:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2137\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> DynValue Call(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\">DynValue&nbsp;</td><td class=\"PName last\">func,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">params</span>&nbsp;</td><td class=\"PType\">DynValue[]&nbsp;</td><td class=\"PName last\">args</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Calls the specified function, supporting most cases. The called function must not yield.</div></div>",2138:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2138\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> DynValue EvaluateSymbol(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">SymbolRef&nbsp;</td><td class=\"PName last\">symref</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Tries to get the reference of a symbol in the current execution state</div></div>",2139:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2139\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> DynValue EvaluateSymbolByName(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">symbol</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Tries to get the value of a symbol in the current execution state</div></div>",2140:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2140\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> SymbolRef FindSymbolByName(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">symbol</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Finds a symbol by name in the current execution state</div></div>",2142:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype2142\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> Table CurrentGlobalEnv { <span class=\"SHKeyword\">get</span> }</div></div><div class=\"TTSummary\">Gets the current global env, or null if not found.</div></div>",2144:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2144\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> PerformMessageDecorationBeforeUnwind(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">DynValue&nbsp;</td><td class=\"PName last\">messageHandler,</td></tr><tr><td class=\"PType first\">ScriptRuntimeException&nbsp;</td><td class=\"PName last\">exception</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Performs a message decoration before unwinding after an error. To be used in the implementation of xpcall like functions.</div></div>",2146:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype2146\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> Script OwnerScript { <span class=\"SHKeyword\">get</span> }</div></div><div class=\"TTSummary\">Gets the script owning this resource.</div></div>"});