NDSummary.OnToolTipsLoaded("File:Plugins/MoonSharp/Interpreter/Interop/StandardDescriptors/ReflectionMemberDescriptors/MethodMemberDescriptor.cs",{2769:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2769\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">MoonSharp.&#8203;Interpreter.&#8203;Interop.</span>&#8203;MethodMemberDescriptor</div></div></div><div class=\"TTSummary\">Class providing easier marshalling of CLR functions</div></div>",2771:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype2771\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> MethodBase MethodInfo { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">private set</span> }</div></div><div class=\"TTSummary\">Gets the method information (can be a MethodInfo or ConstructorInfo)</div></div>",2772:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype2772\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> InteropAccessMode AccessMode { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">private set</span> }</div></div><div class=\"TTSummary\">Gets the access mode used for interop</div></div>",2773:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype2773\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public bool</span> IsConstructor { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">private set</span> }</div></div><div class=\"TTSummary\">Gets a value indicating whether the described method is a constructor</div></div>",2775:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2775\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">private</span> Func&lt;<span class=\"SHKeyword\">object</span>, <span class=\"SHKeyword\">object</span>[], <span class=\"SHKeyword\">object</span>&gt; m_OptimizedFunc</div></div></div>",2776:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2776\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">private</span> Action&lt;<span class=\"SHKeyword\">object</span>, <span class=\"SHKeyword\">object</span>[]&gt; m_OptimizedAction</div></div></div>",2777:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2777\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">private bool</span> m_IsAction</div></div></div>",2778:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2778\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">private bool</span> m_IsArrayCtor</div></div></div>",2780:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2780\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> MethodMemberDescriptor(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">MethodBase&nbsp;</td><td class=\"PName\">methodBase,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">InteropAccessMode&nbsp;</td><td class=\"PName\">accessMode</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> InteropAccessMode.Default</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Initializes a new instance of the MethodMemberDescriptor class.</div></div>",2781:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2781\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static</span> MethodMemberDescriptor TryCreateIfVisible(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">MethodBase&nbsp;</td><td class=\"PName\">methodBase,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">InteropAccessMode&nbsp;</td><td class=\"PName\">accessMode,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">forceVisibility</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"> <span class=\"SHKeyword\">false</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Tries to create a new MethodMemberDescriptor, returning null in case the method is not visible to script code.</div></div>",2782:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2782\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static bool</span> CheckMethodIsCompatible(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">MethodBase&nbsp;</td><td class=\"PName last\">methodBase,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">throwException</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Checks if the method is compatible with a standard descriptor</div></div>",2783:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2783\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public override</span> DynValue Execute(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Script&nbsp;</td><td class=\"PName last\">script,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">object</span>&nbsp;</td><td class=\"PName last\">obj,</td></tr><tr><td class=\"PType first\">ScriptExecutionContext&nbsp;</td><td class=\"PName last\">context,</td></tr><tr><td class=\"PType first\">CallbackArguments&nbsp;</td><td class=\"PName last\">args</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">The internal callback which actually executes the method</div></div>",2784:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2784\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">void</span> IOptimizableDescriptor.Optimize()</div></div><div class=\"TTSummary\">Called by standard descriptors when background optimization or preoptimization needs to be performed.</div></div>",2785:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2785\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> PrepareForWiring(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Table&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Prepares the descriptor for hard-wiring.&nbsp; The descriptor fills the passed table with all the needed data for hardwire generators to generate the appropriate code.</div></div>"});